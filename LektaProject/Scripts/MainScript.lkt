// ****************************************************************************
//
//	Scripting functions for HackTour
//
// ****************************************************************************
//
//	PROJECT	: HackTour
// 	DOMAIN  : -
//	MODULE  : Scripts
//	PACKAGE	: -
// 	FOLDER  : -
// 	FILE	: MainScript.lkt
//
// ****************************************************************************

procedure createDialogueScheme()
{
	DialogueScheme scheme;
	DialogueScript script;

	scheme.DialogueSchemeDescriptor <- 'HackTour';

	// COMMON SCRIPTS

	// Script - Manager
	script <- createDialogueScriptHackTourManager();
	BatchInsertEnd( scheme.DialogueScripts,	script );

	// Script - Recurrent Greetings
	script <- createDialogueScriptGreetings();
	BatchInsertEnd( scheme.DialogueScripts,	script );

	// Script - Goodbyes
//	script <- createDialogueScriptGoodbyes();
//	BatchInsertEnd( scheme.DialogueScripts,	script );

	// Script - Insults
	script <- createDialogueScriptInsult();
	BatchInsertEnd( scheme.DialogueScripts,	script );

	// Script - Cancellations
	script <- createDialogueScriptCancellations();
	BatchInsertEnd( scheme.DialogueScripts,	script );

	//Script - repeat
	script <- createDialogueScriptRepeat();
	BatchInsertEnd( scheme.DialogueScripts, script);

	// APP SCRIPTS

	// Script - VenueSuggestion
	script <- createVenueSuggestionScript();
	BatchInsertEnd( scheme.DialogueScripts, script);

	// Script - TimetableSearcher
	script <- createTimetableSearcherScript();
	BatchInsertEnd( scheme.DialogueScripts, script);

	// Script - CampaignScript
	script <- createCampaignSuggestionScript();
	BatchInsertEnd( scheme.DialogueScripts, script);

	// Script - WeatherAdvisor
	script <- createWeatherAdvisorScript();
	BatchInsertEnd( scheme.DialogueScripts, script);

	// Script - SearcherScript
//	script <- createDetailsSearcherScript();
//	BatchInsertEnd( scheme.DialogueScripts, script);

	// Script - NextVenueScript
//	script <- createNextVenueScript();
//	BatchInsertEnd( scheme.DialogueScripts, script);

	MDScheme <- scheme;
}

DialogueScript createDialogueScriptHackTourManager ()
{
	DialogueScript script;
	script.ScriptDescriptor <- 'Manager';

	// Trigger
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'datetime' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'countryplace' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'weatherinfotype' );

	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'venuecategory' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'venuesubcategory' );

	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'proposeddatetime' );

	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'venue' );

	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'negotiatemodifier' );

	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType  <- 'core';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'action';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'scope';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'datetime';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'countryplace';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'venuecategory';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'proposeddatetime';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'venue';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'negotiatemodifier';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	script <- defaultNode(script, 0);

 	// NODE - welcome
	script <- createBranchNodeNoWait(script, 1, 'welcome');
	script <- modifyBranchNodeState(script, 'welcome', 'active');
	script <- modifyBranchNodeMessage(script, 'welcome', 'social', 'greeting', 'offer', 'welcome');

    	// EDGE - Always
    	script <- createOutputBranch(script, 1, 'welcome', 'checkCampaign', 'always');
		script <- modifyOutputBranchMessage(script, 'welcome', 'checkCampaign', 'always', 'social', 'greeting', 'offer', 'hmihy');
    	script <- addOutputBranchActionGeneral(script, 'welcome', 'checkCampaign', 'always', 'initialize_category');

	// NODE - checkCampaign
	script <- createBranchNodeNoWait(script, 1, 'checkCampaign');
    	
		// EDGE - Launching a campaign
    	script <- createOutputBranch(script, 1, 'checkCampaign', 'launchCampaign', 'campaign');
   		script <- addOutputBranchConditionGeneral(script, 'checkCampaign', 'launchCampaign', 'campaign', 'campaignTriggering');

    	// EDGE - Not launching a campaign
    	script <- createOutputBranch(script, 1, 'checkCampaign', 'offerHelp', 'no_campaign');
   		script <- addOutputBranchConditionGeneral(script, 'checkCampaign', 'offerHelp', 'no_campaign', 'notCampaignTriggering');
   		script <- modifyOutputBranchMessage(script, 'checkCampaign', 'offerHelp', 'no_campaign', 'social', 'greeting', 'offer', 'hemihy');

	// NODE - offerHelp
	script <- createBranchNode(script, 1, 'offerHelp');

		// EDGE - Scope(repeatscript) - LastScript(VenueSuggestion)
	    script <- createOutputBranch(script, 1, 'offerHelp', 'launchVenue', 'scopeRepeatScript');
	    script <- addOutputBranchConditionScope(script, 'offerHelp', 'launchVenue', 'scopeRepeatScript', 'repeatscript');
	    script <- addOutputBranchConditionGeneral(script, 'offerHelp', 'launchVenue', 'scopeRepeatScript', 'lastScriptVenueSuggestion');

	    // EDGE - Scope(weather)
	    script <- createOutputBranch(script, 1, 'offerHelp', 'launchWeather', 'scopeWeather');
	    script <- addOutputBranchConditionScope(script, 'offerHelp', 'launchWeather', 'scopeWeather', 'weather');

		// EDGE - Scope(venue)
	    script <- createOutputBranch(script, 1, 'offerHelp', 'launchVenue', 'scopeVenue');
	    script <- addOutputBranchConditionScope(script, 'offerHelp', 'launchVenue', 'scopeVenue', 'venue');

		// EDGE - Scope(scopeTimetable)
	    script <- createOutputBranch(script, 1, 'offerHelp', 'launchTimetable', 'scopeTimetable');
    	script <- addOutputBranchConditionParameterDigested(script, 'offerHelp', 'launchTimetable', 'scopeTimetable', 'venue');
	    script <- addOutputBranchConditionScope(script, 'offerHelp', 'launchTimetable', 'scopeTimetable', 'timetable');

	    // EDGE - Core(goodbye)
	    script <- createOutputBranch(script, 1, 'offerHelp', 'end', 'goodbye');
	    script <- addOutputBranchConditionCore(script, 'offerHelp', 'end', 'goodbye', 'social', 'goodbye');

		// EDGE - NOT(Scope(weather)) - NOT(Scope(venue)) - NOT(Scope(repeatscript)) - NOT(Scope(details))
	    script <- createOutputBranch(script, 1, 'offerHelp', 'parameterPreProcessing', 'notScope');
	    script <- addOutputBranchConditionNotScope(script, 'offerHelp', 'parameterPreProcessing', 'notScope', 'weather');
	    script <- addOutputBranchConditionNotScope(script, 'offerHelp', 'parameterPreProcessing', 'notScope', 'venue');
	    script <- addOutputBranchConditionNotScope(script, 'offerHelp', 'parameterPreProcessing', 'notScope', 'repeatscript');
	    script <- addOutputBranchConditionNotScope(script, 'offerHelp', 'parameterPreProcessing', 'notScope', 'timetable');
        script <- addOutputBranchConditionNotCore(script, 'offerHelp', 'parameterPreProcessing', 'notScope', 'social', 'goodbye');

	// NODE - parameterPreProcessing
    script <- createBranchNodeNoWait(script, 1, 'parameterPreProcessing');

		// EDGE - Digested(countryplace) - NotDigested(venuecategory) - Changed(countryplace)
	    script <- createOutputBranch(script, 1, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace');
	    script <- addOutputBranchConditionParameterDigested(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace', 'countryplace');
	    script <- addOutputBranchConditionParameterNotDigested(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace', 'venuecategory');
	    script <- addOutputBranchConditionParameterNotDigested(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace', 'venue');
	    script <- addOutputBranchConditionGeneral(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace', 'changedCountryPlace');
    	script <- addOutputBranchActionGeneral(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace', 'setDefaultCategoryVenue');

		// EDGE - NotDigested(countryplace)
	    script <- createOutputBranch(script, 1, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace2');
	    script <- addOutputBranchConditionParameterNotDigested(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace2', 'countryplace');

		// EDGE - Digested(venuecategory)
	    script <- createOutputBranch(script, 1, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace3');
	    script <- addOutputBranchConditionParameterDigested(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace3', 'venuecategory');

		// EDGE - NotChanged(countryplace)
	    script <- createOutputBranch(script, 1, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace4');
	    script <- addOutputBranchConditionGeneral(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace4', 'notChangedCountryPlace');

		// EDGE - Digested(venue)
	    script <- createOutputBranch(script, 1, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace5');
	    script <- addOutputBranchConditionParameterDigested(script, 'parameterPreProcessing', 'parameterProcessing', 'changingCountryPlace5', 'venue');

	// NODE - parameterProcessing
    script <- createBranchNodeNoWait(script, 1, 'parameterProcessing');

    	// EDGE - parameterDigested(datetime)
    	script <- createOutputBranch(script, 1, 'parameterProcessing', 'offerHelp', 'datetime');
    	script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'offerHelp', 'datetime', 'datetime');
    	script <- addOutputBranchConditionParameterEmpty(script, 'parameterProcessing', 'offerHelp', 'datetime', 'countryplace');
		script <- modifyOutputBranchMessageParameter(script, 'parameterProcessing', 'offerHelp', 'datetime', 'statement', 'inform', 'implicit', 'parameter3', 'datetime');

    	// EDGE - parameterDigested(datetime) - lastScript(WeatherAdvisor)
    	script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchWeather', 'datetime');
    	script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchWeather', 'datetime', 'datetime');
		script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'launchWeather', 'datetime', 'lastScriptWeatherAdvisor');

		// EDGE - parameterDigested(countryplace) - lastScript(WheatherAdvisor)
    	script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchWeather', 'countryplace');
    	script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchWeather', 'countryplace', 'countryplace');
        script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'launchWeather', 'countryplace', 'venuecategory');
		script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'launchWeather', 'countryplace', 'lastScriptWeatherAdvisor');

		// EDGE - parameterDigested(countryplace) - lastScript(VenueSuggestion)
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchVenue', 'countryplacesuggestion');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'countryplacesuggestion', 'countryplace');
        script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'launchVenue', 'countryplacesuggestion', 'lastScriptVenueSuggestion');

		// EDGE - parameterDigested(countryplace) - lastScript(TimetableSearcher)
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchVenue', 'countryplacetimetable');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'countryplacetimetable', 'countryplace');
        script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'launchVenue', 'countryplacetimetable', 'lastScriptTimetableSearcher');

		// EDGE - parameterDigested(countryplace) - lastScript(CampaignSuggestion)
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchVenue', 'countryplacecampaign');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'countryplacecampaign', 'countryplace');
        script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'launchVenue', 'countryplacecampaign', 'lastScriptCampaignSuggestion');

		// EDGE - parameterDigested(countryplace) - noLastScript
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchVenue', 'countryplacenolast');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'countryplacenolast', 'countryplace');
        script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'launchVenue', 'countryplacenolast', 'venue');
        script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'launchVenue', 'countryplacenolast', 'noLastScript');
		script <- modifyOutputBranchMessageParameter(script, 'parameterProcessing', 'launchVenue', 'countryplacenolast', 'statement', 'inform', 'implicit', 'parameter2', 'countryplace');

		// EDGE - Hello
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'checkCampaign', 'hello');
        script <- addOutputBranchConditionCore(script, 'parameterProcessing', 'checkCampaign', 'hello', 'social', 'greeting');
        script <- addOutputBranchConditionGeneral(script, 'parameterProcessing', 'checkCampaign', 'hello', 'noLastScript');
        script <- addOutputBranchConditionParameterEmpty(script, 'parameterProcessing', 'checkCampaign', 'hello', 'countryplace');
		script <- modifyOutputBranchMessage(script, 'parameterProcessing', 'checkCampaign', 'hello', 'question', 'whquestion', 'explicit', 'countryplace');

		// EDGE - parameterDigested(venue)
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchTimetable', 'venue');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchTimetable', 'venue', 'venue');

		// EDGE - parameterDigested(venuecategory) - NotParameterDigested(datetime)
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchVenue', 'venuecategory');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'venuecategory', 'venuecategory');
        script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'launchVenue', 'venuecategory', 'datetime');

		// EDGE - parameterDigested(venuecategory) - parameterDigested(datetime)
        script <- createOutputBranch(script, 1, 'parameterProcessing', 'launchVenue', 'venuecategory2');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'venuecategory2', 'venuecategory');
        script <- addOutputBranchConditionParameterDigested(script, 'parameterProcessing', 'launchVenue', 'venuecategory2', 'datetime');
        script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'launchVenue', 'venuecategory2', 'venue');
        script <- addOutputBranchConditionParameterNotEmpty(script, 'parameterProcessing', 'launchVenue', 'venuecategory2', 'countryplace');
		script <- modifyOutputBranchMessageParameter(script, 'parameterProcessing', 'launchVenue', 'venuecategory2', 'statement', 'inform', 'implicit', 'parameter2', 'countryplace');

		// EDGE - !parameterDigested(datetime) - !parameterDigested(countryplace) - !parameterDigested(weatherinfotype)
		//      - !parameterDigested(venuecategory) - !parameterDigested(venuesubcategory)
       	script <- createOutputBranch(script, 1, 'parameterProcessing', 'checkCampaign', 'default');
       	script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'checkCampaign', 'default', 'venue');
       	script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'checkCampaign', 'default', 'datetime');
       	script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'checkCampaign', 'default', 'countryplace');
       	script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'checkCampaign', 'default', 'weatherinfotype');
       	script <- addOutputBranchConditionParameterNotDigested(script, 'parameterProcessing', 'checkCampaign', 'default', 'venuecategory');
        script <- addOutputBranchConditionNotCore(script, 'parameterProcessing', 'checkCampaign', 'default', 'social', 'greeting');

	// NODE - launchWeather
	script <- createBranchNodeNoWait(script, 1, 'launchWeather');
	script <- addBranchActionGeneral0Parameter(script, 'launchWeather', 'launchWeatherAdvisor');

    	// EDGE - Always
    	script <- createOutputBranch(script, 1, 'launchWeather', 'checkCampaign', 'always');
    	script <- addOutputBranchActionGeneral(script, 'launchWeather', 'checkCampaign', 'always', 'updateAfterWeatherAdvisor');

	// NODE - launchCampaign
	script <- createBranchNodeNoWait(script, 1, 'launchCampaign');
	script <- addBranchActionGeneral0Parameter(script, 'launchCampaign', 'launchCampaignSuggestion');

    	// EDGE - Always
    	script <- createOutputBranch(script, 1, 'launchCampaign', 'checkCampaign', 'always');
    	script <- addOutputBranchActionGeneral(script, 'launchCampaign', 'checkCampaign', 'always', 'updateAfterCampaignSuggestion');

	// NODE - launchVenue
    script <- createBranchNodeNoWait(script, 1, 'launchVenue');
    script <- addBranchActionGeneral0Parameter(script, 'launchVenue', 'launchVenueSuggestion');

        // EDGE - Always
        script <- createOutputBranch(script, 1, 'launchVenue', 'checkCampaign', 'always');
        script <- addOutputBranchActionGeneral(script, 'launchVenue', 'checkCampaign', 'always', 'updateAfterVenueSuggestion');

	// NODE - launchTimetable
	script <- createBranchNodeNoWait(script, 1, 'launchTimetable');
	script <- addBranchActionGeneral0Parameter(script, 'launchTimetable', 'launchTimetableSearcher');

    	// EDGE - Always
    	script <- createOutputBranch(script, 1, 'launchTimetable', 'askBooking', 'always');
    	script <- addOutputBranchActionGeneral(script, 'launchTimetable', 'askBooking', 'always', 'updateAfterTimetableSearcher');
		script <- modifyOutputBranchMessage(script, 'launchTimetable', 'askBooking', 'always', 'statement', 'inform', 'explicit', 'timetable');

	// NODE - askBooking
	script <- createBranchNode(script, 1, 'askBooking');
	script <- modifyBranchNodeMessage(script, 'askBooking', 'question', 'propositional', 'ask', 'booking');

		// EDGE - Yes
        script <- createOutputBranch(script, 1, 'askBooking', 'lookForCampaign', 'yes');
        script <- addOutputBranchConditionCore(script, 'askBooking', 'lookForCampaign', 'yes', 'basicanswer', 'agreement');

        // EDGE - No
        script <- createOutputBranch(script, 1, 'askBooking', 'checkCampaign', 'no');
        script <- addOutputBranchConditionCore(script, 'askBooking', 'checkCampaign', 'no', 'basicanswer', 'disagreement');

		// EDGE - Digested(datetime)
        script <- createOutputBranch(script, 1, 'askBooking', 'lookForCampaign', 'digested');
        script <- addOutputBranchConditionParameterDigested(script, 'askBooking', 'lookForCampaign', 'digested', 'datetime');

	// NODE - lookForCampaign
	script <- createBranchNodeNoWait(script, 1, 'lookForCampaign');

		// EDGE - Campaign for current venue
	    script <- createOutputBranch(script, 1, 'lookForCampaign', 'negotiateAppointment', 'yes');
   		script <- addOutputBranchConditionGeneral(script, 'lookForCampaign', 'negotiateAppointment', 'yes', 'campaignTriggeringVenue');
		script <- modifyOutputBranchMessage(script, 'lookForCampaign', 'negotiateAppointment', 'yes', 'statement', 'inform', 'explicit', 'campaignvenue');

		// EDGE - No campaign for current venue
	    script <- createOutputBranch(script, 1, 'lookForCampaign', 'negotiateAppointment', 'no');
   		script <- addOutputBranchConditionGeneral(script, 'lookForCampaign', 'negotiateAppointment', 'no', 'notCampaignTriggeringVenue');

	// Datetime negotiation

	// NODE - proposeAppointment
	script <- createBranchNode(script, 1, 'proposeAppointment');
	script <- modifyBranchNodeMessage(script, 'proposeAppointment', 'statement', 'inform', 'propose', 'appointment');

		// EDGE - Yes
        script <- createOutputBranch(script, 1, 'proposeAppointment', 'negotiateAppointment', 'yes');
        script <- addOutputBranchConditionCore(script, 'proposeAppointment', 'negotiateAppointment', 'yes', 'basicanswer', 'agreement');
        script <- addOutputBranchConditionParameterNotDigested(script, 'proposeAppointment', 'negotiateAppointment', 'yes', 'datetime');
   		script <- addOutputBranchActionGeneral(script, 'proposeAppointment', 'negotiateAppointment', 'yes', 'clear_datetime');

		// EDGE - Digested(datetime)
        script <- createOutputBranch(script, 1, 'proposeAppointment', 'negotiateAppointment', 'digested');
        script <- addOutputBranchConditionParameterDigested(script, 'proposeAppointment', 'negotiateAppointment', 'digested', 'datetime');

        // EDGE - No
        script <- createOutputBranch(script, 1, 'proposeAppointment', 'checkCampaign', 'no');
        script <- addOutputBranchConditionCore(script, 'proposeAppointment', 'checkCampaign', 'no', 'basicanswer', 'disagreement');

	// NODE - negotiateAppointment
	script <- createBranchNodeNoWait(script, 1, 'negotiateAppointment');
	script <- addBranchActionGeneral1Parameter(script, 'negotiateAppointment', 'negotiate_datetime', 'datetime');
	
		// EDGE - NotEmpty(proposeddatetime)
        script <- createOutputBranch(script, 1, 'negotiateAppointment', 'confirmAppointment', 'notemptyproposeddatetime');
        script <- addOutputBranchConditionParameterNotEmpty(script, 'negotiateAppointment', 'confirmAppointment', 'notemptyproposeddatetime', 'proposeddatetime');

		// EDGE - Empty(proposeddatetime) - Not(InThePast)
        script <- createOutputBranch(script, 1, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime');
        script <- addOutputBranchConditionParameterEmpty(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime', 'proposeddatetime');
        script <- addOutputBranchConditionGeneral(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime', 'not_negotiating_in_the_past');
		script <- modifyOutputBranchMessage(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime', 'statement', 'inform', 'nomore', 'appointments');

		// EDGE - Empty(proposeddatetime) - InThePast
        script <- createOutputBranch(script, 1, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast');
        script <- addOutputBranchConditionParameterEmpty(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast', 'proposeddatetime');
        script <- addOutputBranchConditionGeneral(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast', 'negotiating_in_the_past');
		script <- modifyOutputBranchMessage(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast', 'statement', 'inform', 'past', 'appointments');

	// NODE - confirmAppointment
	script <- createBranchNode(script, 1, 'confirmAppointment');
	script <- modifyBranchNodeMessageParameter(script, 'confirmAppointment', 'question', 'propositional', 'confirm', 'appointment', 'proposeddatetime');

		// EDGE - Yes
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'checkCampaign', 'yes');
        script <- addOutputBranchConditionCore(script, 'confirmAppointment', 'checkCampaign', 'yes', 'basicanswer', 'agreement');
        script <- addOutputBranchConditionParameterNotDigested(script, 'confirmAppointment', 'checkCampaign', 'yes', 'negotiatemodifier');
		script <- modifyOutputBranchMessageParameter(script, 'confirmAppointment', 'checkCampaign', 'yes', 'statement', 'inform', 'explicit', 'appointment', 'proposeddatetime');

		// EDGE - No
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'negotiateAppointment', 'no');
        script <- addOutputBranchConditionCore(script, 'confirmAppointment', 'negotiateAppointment', 'no', 'basicanswer', 'disagreement');
        script <- addOutputBranchConditionParameterNotDigested(script, 'confirmAppointment', 'negotiateAppointment', 'no', 'negotiatemodifier');
		script <- addOutputBranchActionGeneral1Parameter(script, 'confirmAppointment', 'negotiateAppointment', 'no', 'add_rejected_datetime', 'proposeddatetime');

		// EDGE - Digested(datetime)
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'negotiateAppointment', 'digested');
        script <- addOutputBranchConditionParameterDigested(script, 'confirmAppointment', 'negotiateAppointment', 'digested', 'datetime');

		// EDGE - Digested(negotiatemodifier)
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'negotiateAppointment', 'negotiate');
        script <- addOutputBranchConditionParameterDigested(script, 'confirmAppointment', 'negotiateAppointment', 'negotiate', 'negotiatemodifier');
		script <- addOutputBranchActionGeneral2Parameter(script, 'confirmAppointment', 'negotiateAppointment', 'negotiate', 'add_negotiate_datetime', 'proposeddatetime', 'negotiatemodifier');

	// NODE - confirmAppointment
	script <- createBranchNodeNoWait(script, 1, 'end');
	script <- modifyBranchNodeMessage(script, 'end', 'social', 'goodbye', '', '');

	script <- endScript(script,10);

  	return script;
}


